<%- include('head') %>

  </head>

  <body>

    <%- include('appHeader') %>
      <div class="wrapper d-flex align-items-stretch">
        <%- include('sidebar') %>

          <!-- Page Content  -->
          <div id="content" class="">
            <div class="content_wrapper">




                  <div class="container">
                    <!-- <h3 class="">Category</h3> -->
                   
                  </div>
              <div class="container app_container">
                <div class="row">
                  <div class="col-sm-6">
                    <h4 class="mb-4">Category List</h4>
                  </div>
                  <% if (permissions.find(perm => perm.permission_name === "Category Management" && perm.create == 1)) { %>
                  <div class="col-sm-6 text-sm-end">
                    <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#addCatModal"> Add
                      Category</button>
                  </div>
                  <% }%>
                </div>


                <table id="categoryTable" class="row-border table table-striped table-responsive wrap" width="100%">
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Post Title</th>
                      <th>Publish Date</th>
                      <th>Cat Name</th>
                      <th>Subcat Name</th>
                      <th>User</th>
                      <th>comments</th>
                    
                    </tr>
                  </thead>
                  <tbody id="userInfo1">
                    <% postdata.forEach(post=> { %>
                      <tr class="odd">
                        <td>
                          <%= post.id %>
                        </td>
                        <td>
                          <%= post.post_title %>
                        </td>
                        <td>
                          <%= new Date(post.post_date).toLocaleDateString('en-GB', { day: 'numeric' , month: 'short' ,
                            year: 'numeric' }) %>
                        </td>
                        <td>
                          <%= post.cat_name %>
                        </td>
                        <td>
                          <%= post.subcat_name %>
                        </td>
                        <td>
                          <%= post.session_user_name %>
                        </td>
                        <td>
                          <%= post.comments %>
                        </td>
                        
                        
                        
                      </tr>
                      <% }); %>
                  </tbody>
                </table>
              </div>

            </div>
            
          </div>



      </div>





      <!-- Modal -->
      <div class="modal fade" id="addCatModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="addCatModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="addCatModalLabel">Add Category</h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCategory">
              <div class="modal-body">

                <div class="col-12 mb-2">
                  <label for="addCatName" class="form-label">Category Name<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="addCatName" name="addCatName" required
                  data-parsley-pattern="^(?![0-9\s]*$)[a-zA-Z0-9][a-zA-Z0-9\s]*[a-zA-Z0-9]$"
                    data-parsley-required-message="Category is required">
                </div>
                <div class="col-12 mb-2">
                  <label for="addCatSlug" class="form-label">Category Slug Name<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="addCatSlug" name="addCatSlug" required
                  data-parsley-pattern="^(?!^\d+$)(?!^[^a-zA-Z0-9]+$)[^\s].*[^\s]$"
                    data-parsley-required-message="Slug name is required">
                </div>

              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-sm btn-primary">Add</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Modal -->
      <div class="modal fade" id="updateCategoryModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="updateCategoryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="updateCategoryModalLabel">Edit Category - <span id="editCatName"></span></h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="updateCategory">
              <div class="modal-body">

                <div class="col-12 mb-2">
                  <input type="hidden" id="update_catId" name="update_catId" value="">
                  <label for="update_catName" class="form-label">Category Name<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="update_catName" name="update_catName"
                    required data-parsley-pattern="^(?![0-9\s]*$)[a-zA-Z0-9][a-zA-Z0-9\s]*[a-zA-Z0-9]$"
                     data-parsley-required-message="Category is required">
                </div>
                <div class="col-12 mb-2">
                  <label for="update_catSlug" class="form-label">Category Slug Name<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="update_catSlug" name="update_catSlug"
                    required data-parsley-pattern="^(?!^\d+$)(?!^[^a-zA-Z0-9]+$)[^\s].*[^\s]$"
                     data-parsley-required-message="Category slug is required">
                </div>

              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-sm btn-warning">Update</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    



      
        <%- include('contentFooter') %>
      
     
      <script>

        $(document).ready(function () {

          $('#categoryTable').DataTable({
            'columnDefs': [
              { width: 30, targets: 0 },

              // { width: 100, targets: 6 },
              { responsivePriority: 2, targets: -1 },
              { responsivePriority: 3, targets: -2 },
            ],
          });



          $('#addCategory, #updateCategory').parsley();


          $('#categoryTable').on('click', '.updateBtn', async function () {
            console.log('update btn clicked');
            console.log(this.id);
            const updateId = this.id;
            try {
              const response = await fetch(`api/category/get_category/${updateId}`).then(response => {
                if (!response.ok) {
                  throw new error(`Category data not received`);
                }
                return response.json();
              }).then(data => {
                console.log(data);
                const catInfo = data.category[0];
                console.log(catInfo.cat_name);
                $('#update_catName').val(catInfo.cat_name);
                $('#update_catSlug').val(catInfo.cat_slug);
                $('#update_catId').val(updateId);
                $('#editCatName').html(catInfo.cat_name);
                $("#updateCategoryModal").modal('show');

              })
            } catch (error) {
              Swal.fire({
                        text: `Category Error!`,
                        icon: "error",
                  });
              // console.log(error);
            }
          })

          $('#categoryTable').on('click', '.deleteBtn', async function () {
            console.log('delete btn clicked');
            console.log(this.id);
            console.log($(this).data('catname'));
            const deleteId = this.id;
            const deleteCat = $(this).data('catname');
            Swal.fire({
              // text: "Are you sure to Delete",
              // title: `${deleteCat}`,
              // text: "You won't be able to revert this!",
              icon: "warning",
              html : `<span>Are you sure to Delete</span><h4>${deleteCat}</h4><span>You won't be able to revert this!</span>`,
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Yes, delete it!"

            }).then(async (result) => {
              if (result.isConfirmed) {
               

                try {
                  const response = await fetch(`api/category/delete_category/${deleteId}`).then(response => {
                    if (!response.ok) {
                      throw new error(`Cat data not received`);
                    }
                    return response.json();
                  }).then(data => {
                    Swal.fire({
                        text: `Category Deleted!`,
                        icon: "success",

                      }).then((result) => {
                        location.reload();
                      })

                  })
                } catch (error) {
                  Swal.fire({
                        text: `Category Delete Error!`,
                        icon: "error",
                  });
                  // console.log(error);
                } 
              }
            })
          })


          $('#addCategory').submit(async function (e) {
            e.preventDefault();
            if ($(this).parsley().isValid()) {

              const cName = $('#addCatName').val();
              const cSName = $('#addCatSlug').val();
              const data = {
                cat_name: cName,
                cat_slug: cSName
              }
              try {
                const response = await fetch('api/category/add_category', {
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  method: 'POST',
                  body: JSON.stringify(data)
                })

                if (response.ok) {

                  setTimeout(() => {
                    $("#addCatModal").modal('hide');
                    Swal.fire({
                      text: `New Category ${cName} Added!`,
                      icon: "success",

                    }).then((result) => {

                      location.reload();
                    })

                  }, 500)
                  console.log('cat added');
                }
                else {
                  const responseData = await response.json();
                  throw new Error(responseData.error);
                 }
              } catch (error) {
                Swal.fire({
                        text: error.message,
                        icon: "error",
                  });
                console.log(error);
              }


            }


          });


          $('#updateCategory').submit(async function (e) {
            e.preventDefault();
            if ($(this).parsley().isValid()) {

              const cName = $('#update_catName').val();
              const cSName = $('#update_catSlug').val();
              const cId = $('#update_catId').val();
              const data = {
                cat_id: cId,
                cat_name: cName,
                cat_slug: cSName
              }

              console.log(data);

              try {
                const response = await fetch('api/category/udpate_category', {
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  method: 'POST',
                  body: JSON.stringify(data)
                })

                if (response.ok) {

                  setTimeout(() => {
                    $("#updateCategoryModal").modal('hide');
                    Swal.fire({
                      text: `Category Updated!`,
                      icon: "success",

                    }).then((result) => {

                      location.reload();
                    })

                  }, 500)
                  console.log('cat Updated');
                }
                else {
                  const responseData = await response.json();
                  throw new Error(responseData.error);
                }
              } catch (error) {
                Swal.fire({
                        text: error.message,
                        icon: "error",
                  });
                // console.log(error);
              }


            }


          });





        })
      </script>


  </body>

  </html>