<%- include('head') %>

  </head>

  <body>

    <%- include('appHeader') %>
      <div class="wrapper d-flex align-items-stretch">
        <%- include('sidebar') %>

          <!-- Page Content  -->
          <div id="content" class="">
            <div class="content_wrapper">
              
              
              
              
              <div class="container app_container">

                <h4 class="mb-4 ">Add Post Redirect URL</h4>
                <form id="addUrlRedirect">

                  <div class="row">
                    <div class="col-12">
                      <input type="hidden" id="user_id" name="user_id" value="<%= user.userid %>">
                      <input type="hidden" id="user_name" name="user_name" value="<%= user.user_name %>">
                      <div class="col-12 mb-2">
                        <label for="current_url" class="form-label">Current URL<span class="text-danger">*</label>
                          <input type="text" class="form-control form-control-sm" id="current_url"
                            name="current_url" 
                            required data-parsley-pattern="^(https?):\/\/[^\s/$.?#].[^\s]*\.[^\s\/$?#].[^\s]*$" 
                             data-parsley-required-message="Redirect Url is required">
                      </div>
                      <div class="col-12 mb-2">
                        <label for="redirect_url" class="form-label">Redirect URL<span class="text-danger">*</label>
                          <input type="text" class="form-control form-control-sm" id="redirect_url"
                            name="redirect_url"
                            required data-parsley-pattern="^(https?):\/\/[^\s/$.?#].[^\s]*\.[^\s\/$?#].[^\s]*$" 
                             data-parsley-required-message="Redirect Url is required">
                      </div>
                      <div class="text-center">
                        <button type="submit" class="btn btn-sm btn-primary mt-2 addBtn" >Submit</button>
                        <!-- </div> -->
                      </div>
                    </div>
                    
                  </div>
                  <!-- <div class="row"> -->

                </form>
                <!-- <span id="login-status"></span> -->

              </div>


              <div class="container app_container mt-3">
                <div class="row ">
                  <div class="col-sm-6">
                    <h4 class="">Redirect URL List</h4>
                  </div>
                </div>
                <div class=" mt-3">
                  <table id="urlList" class="postTable table table-striped display table-responsive ">
                    <thead>
                      <tr>
                        <th>ID</th>
                        <th>Current URL</th>
                        <th>Redirect URL</th>
                        <th>User</th>
                        <th class="none">Created At</th>
                        <th class="none">Updated At</th>

                        
                        <% if (permissions.find(perm=> perm.permission_name === "Post Management" && ((perm.update == 1 ) || (perm.delete == 1 )))) { %>
                          <th class="text-center">Action</th>
                          <%}%>
                            
              
                      </tr>
                    </thead>
                    <tbody></tbody>
                  </table>
              
              
                </div>
              </div>



            </div>
          </div>
      </div>


       <!-- Modal -->
      <div class="modal fade" id="updateRedirection" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="updateRedirectionLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="updateRedirectionLabel">Edit URL Redirection Information</span>
              </h1>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="updateUrlRedirect">
              <div class="modal-body">
              
                <input type="hidden" id="url_id" name="url_id" value="">
                <input type="hidden" id="update_user_id" name="update_user_id" value="<%= user.userid %>">
                <input type="hidden" id="update_user_name" name="update_user_name" value="<%= user.user_name %>">
                <div class="col-12 mb-2">
                  <label for="update_current_url" class="form-label">Current URL<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="update_current_url" name="update_current_url" required
                  data-parsley-pattern="^(https?):\/\/[^\s/$.?#].[^\s]*\.[^\s\/$?#].[^\s]*$" 
                    data-parsley-required-message="Redirect Url is required">
                </div>
                <div class="col-12 mb-2">
                  <label for="update_redirect_url" class="form-label">Redirect URL<span class="text-danger">*</label>
                  <input type="text" class="form-control form-control-sm" id="update_redirect_url" name="update_redirect_url" required
                  data-parsley-pattern="^(https?):\/\/[^\s/$.?#].[^\s]*\.[^\s\/$?#].[^\s]*$" 
                    data-parsley-required-message="Redirect Url is required">
                </div>
              
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-sm btn-warning">Update</button>
              </div>
            </form>
          </div>
        </div>
      </div>
      



      <%- include('contentFooter') %>


        <script>






          $(document).ready(function () {

           

            
          


            $('#updateUrlRedirect').submit(async function (e) {
              e.preventDefault();
              if ($(this).parsley().isValid()) {

                const url_id = $("#url_id").val();
                const user_id = $("#update_user_id").val();
                const user_name = $("#update_user_name").val();
                const current_url = $("#update_current_url").val();
                const redirect_url = $("#update_redirect_url").val();
                
                const urlData = {url_id,user_id,user_name,current_url,redirect_url}

                try {
                  const response = await fetch('<%=rootVar%>/api/url_redirect/edit',{
                     method: "PUT",
                     headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify(urlData),
                  });


                  if (response.ok) {

                    setTimeout(() => {
                      $("#updateRedirection").modal('hide');
                      Swal.fire({
                        text: `Post Redirection information Updated!`,
                        icon: "success",

                      }).then((result) => {

                        location.reload();
                      })

                    }, 500)
                   
                  }
                  else {
                    const responseData = await response.json();
                    throw new Error(responseData.error);
                  }
                } catch (error) {
                  Swal.fire({
                    text: error.message,
                    icon: "error",
                  });
                  // console.log(error);
                }


              }


            });

       
            $('#urlList').on('click', '.updateBtn', async function () {
              var urlId = this.id;
              console.log({ urlId });

              try {
                const response = await fetch(`<%=rootVar%>/api/url_redirect/get_url/${urlId}`);

                if (!response.ok) {
                  throw new error(`Post Redirection information Fetch Error`);
                }
                const data = await response.json();
                const urlInfo = data.urlDetails[0]
                $('#url_id').val(urlInfo.id);
                $('#update_current_url').val(urlInfo.current_url);
                $('#update_redirect_url').val(urlInfo.redirect_url);
                
                $("#updateRedirection").modal('show');


              } catch (error) {
                Swal.fire({
                  text: `Post Redirection information Fetch Error!`,
                  icon: "error",
                });
                // console.log(error);
              }




            });

            $('#urlList').on('click', '.deleteBtn', async function () {
              var deleteID = this.id;
              console.log({ deleteID });
              Swal.fire({
                // text: "Are you sure to Delete",
                // title: `${deleteCat}`,
                // text: "You won't be able to revert this!",
                icon: "warning",
                html: `<span>Are you sure to Delete URL Redireaction? You won't be able to revert this!</span>`,
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"

              }).then(async (result) => {
                if (result.isConfirmed) {
                  console.log('confirm');

                  try {
                    const response = await fetch(`<%=rootVar%>/api/url_redirect/delete_redirect/${deleteID}`, {
                      method: "DELETE",
                  });

                    if (!response.ok) {
                      throw new error(`URL Redireaction Information Delete Error`);
                    }
                    const data = await response.json();

                    // Display success message using Swal
                    await Swal.fire({
                      text: `URL Redireaction Information Deleted!`,
                      icon: "success",
                    });

                    // Reload the page after deletion
                    location.reload();
                  } catch (error) {
                    Swal.fire({
                      text: `URL Redireaction Information Delete Error!`,
                      icon: "error",
                    });
                    // console.log(error);
                  }
                }
              })
            });


          


            

           

  

      
           
            $('#addUrlRedirect,#updateUrlRedirect').parsley();



            $('#addUrlRedirect').submit(async function (e) {
              e.preventDefault();
              console.log('form submit');
              // Check if the form is valid
              if ($(this).parsley().isValid()) {
                console.log('chceing valid');
                const user_id = $("#user_id").val();
                const user_name = $("#user_name").val();
                const current_url = $("#current_url").val();
                const redirect_url = $("#redirect_url").val();
                
                const urlData = {user_id,user_name,current_url,redirect_url}

                console.log({ urlData });
                try {
                  const response = await fetch("<%=rootVar%>/api/url_redirect", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify(urlData),
                  });

                  if (response.ok) {
                    console.log('success');
                    Swal.fire({
                      text: "URL Redirection has been addded successfully!",
                      icon: "success",
                      showCancelButton: false,
                      confirmButtonText: 'OK',
                      // timer: 2000
                    }).then((result) => {
                      // window.location.href = '<%=rootVar%>/post-image-add';
                      window.location.reload();
                    })
                  } else {
                    const responseData = await response.json();
                    throw new Error(responseData.message);
                  }
                } catch (error) {
                  Swal.fire({
                    text: error,
                    icon: "error",
                  })
                }
              }
            });


            function loadData() {

              console.log('data loading');

              var dataTable = $('#urlList').DataTable({
                // 'processing': true,
                'serverSide': true,
                'serverMethod': 'get',
                "autoWidth": false,
                language: {
                  infoFiltered: ""
                },
                'columnDefs': [
                  { width: 70, targets: 0 },


                  // { width: 100, targets: 6 },
                  { responsivePriority: 2, targets: -1 },
                  { responsivePriority: 3, targets: -2 },
                  { width: 100, targets: -1 },

                ],
                'responsive': {
                  details: true
                },
                'ajax': {
                  'url': '/api/url_redirect',
                  'type': 'get',
                },
                'aaSorting': [],
                "ordering": false,
                'columns': [
                  { data: 'id' },
                  { data: 'current_url' },
                  { data: 'redirect_url' },
                  { data: 'user_name' },
              
                 {
                    data: null,
                    render: function (data) {
                      return (data.created_at == null || data.created_at == 'Invalid Date') ? "-" : new Date(data.created_at).toLocaleString('en-GB', { day: 'numeric', month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
                    }
                  },
                 {
                    data: null,
                    render: function (data) {
                      return (data.updated_at == null || data.updated_at == 'Invalid Date') ? "-" : new Date(data.updated_at).toLocaleString('en-GB', { day: 'numeric', month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
                    }
                  },
                  {
                    data: null,
                    render: function (data) {
                      
                        return '<div class="text-center"><% if (permissions.find(perm=> perm.permission_name === "Post Management" && (perm.update == 1 ))) { %><span class="updateBtn"  id="' + data.id + '"> <i class="bi bi-pencil-square"></i> </span> <%}%> <% if (permissions.find(perm=> perm.permission_name === "Post Management" && ( perm.delete == 1))) {%> <span class="deleteBtn" id="' + data.id + '"> <i class="bi bi-trash3-fill"></i> </span> <%}%></div>';
                     
                    }
                  },
                 



                ]
              });

            }



            loadData()








          })
        </script>


  </body>

  </html>