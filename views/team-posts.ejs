<%- include('head') %>
  

  

  <body>

    <%- include('appHeader') %>
    <div class="wrapper d-flex align-items-stretch">
      <%- include('sidebar') %>

        <!-- Page Content  -->
        <div id="content" class="">
            <div class="content_wrapper">
              <div class="container">
                <!-- <h3 class="">Post</h3> -->
               
              </div>
              <div class="container app_container">
              <div class="row ">
                <div class="col-sm-6">
                  <h4 class="mb-4">Team Posts</h4>
                </div>
                <% if (permissions.find(perm => perm.permission_name === "Post Management" && (perm.create == 1))) { %>
                <div class="col-sm-6 text-sm-end">
                 <a href="postcreate" class="btn btn-sm btn-primary"> Create New Post</a>
                </div>
                <%}%>
              </div>
              <div class=" mt-3">
                <table id="post_data" class="postTable table table-striped display table-responsive " width="100%">
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Post Title</th>
                      <th>Publish Date</th>
                      <th>Category</th>
                      <th class="none">Sub-Category</th>
                      <th>User</th>
                      <th class="none">Comment</th>
                      <th>Status</th>
                      <% if (permissions.find(perm => perm.permission_name === "Post Management" && (perm.update == 1 || perm.delete == 1))) { %>
                      <th class="text-center">Action</th>
                      <%}%>
                      <!-- <th></th> -->

                    </tr>
                  </thead>
                  <tbody></tbody>
                </table>
                
                 
              </div>
            </div>
            </div>
           
        </div>
    </div>


    <%- include('contentFooter') %>
   
    <script src="//cdn.datatables.net/plug-ins/1.13.7/pagination/input.js"> </script>

    <script>
      $(document).ready(function () {

        // auto reload post data
    //  setInterval(() => {
    //       console.log('Auto-reload');
    //       location.reload();
    //     }, 60000);



        function loadData() {

          console.log('data loading');

          var dataTable = $('#post_data').DataTable({
            'processing': true,
            'serverSide': true,
            'serverMethod': 'get',
            "autoWidth": false,
            language: {
            infoFiltered: ""
        },
            // responsive: {
            //   details: {
            //     display: DataTable.Responsive.display.modal({
            //       header: function (row) {
            //         var data = row.data();
            //         console.log({data});
            //         console.log(data.id);
            //         return 'Details for ' + data.id + ' ' + data[1];
            //       }
            //     }),
            //     renderer: DataTable.Responsive.renderer.tableAll({
            //       tableClass: 'modal_table'
            //     })
            //   }
            // },
            'responsive': {
              details: true
            },
            'ajax': {
              'url': '/api/post/team-posts',
              'type': 'get',
            },
            'columnDefs': [
              { width: 100, targets: 0 },

              // { width: 100, targets: 6 },
              { responsivePriority: 2, targets: -1 },
              { responsivePriority: 3, targets: -2 },
              { width: 100, targets: -1 },
             
            ],
            'aaSorting': [],
            "ordering": false,
            'columns': [
              { data: 'id' },
             
              {
                    data: null,
                    render: function (data) {

                      if ((data.cat_slug == "" || data.cat_slug == null) || (data.post_name == "" || data.post_name == null)) {
                        return data.post_title
                      } else {
                        if (data.post_status == 'publish') {
                          return '<a class="prev-link" target="_blank" href="<%=etVar%>/' + data.cat_slug + '/' + data.post_name + '">' + data.post_title + '</a>'
                        } else {
                          return '<a class="prev-link" target="_blank" href="<%=etVar%>/preview/' + data.cat_slug + '/' + data.post_name + '">' + data.post_title + '</a>'
                        }
                      }
                    }
                  },
              {
                data:null,
                render:function (data){
                  console.log(data.post_date);
                  return  (data.post_date == null || data.post_date == 'Invalid Date') ? "-"  : new Date(data.post_date).toLocaleDateString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' });
                }
              },
              { data: 'cat_name' },
              { data: 'subcat_name' },
              // { data: 'session_user_name' },
              {
                    data: null,
                    render: function (data) {
                     return (data.handover_to_name) ? data.handover_to_name : data.session_user_name;
                     
                    }
                  },
              //  { data: 'comments' },
              // { data: 'post_status' },
              {
                data : 'comments',
                render: function(data) {
                
                    return (data && data != "") ? data.split('<br>').at(-2).trim() : '';
                }             
                
              },
              {
                data: null,
                render: function (data) {
                 

           
                  if (data.post_status == 'publish') {
                    return `<span class="badge bg-success <%= (user.role == 'Admin' || user.role == 'Publishing Team') ? 'updateStatusBtn' : ''  %>" id="${data.id}">Publish</span>`;
                  } else {
                    return `<span class="badge bg-danger <%= (user.role == 'Admin' || user.role == 'Publishing Team') ? 'updateStatusBtn' : ''  %>" id="${data.id}">Unpublish</span>`;
                  }
                }
              },
              {
                data: null,
                render: function (data) {
                  if (data.post_status !== 'publish') {
                  return '<div class=text-center><% if (permissions.find(perm=> perm.permission_name === "Post Management" && (perm.update == 1 ))) { %><a class="me-2 updateBtn"href="postedit/'+data.id+'"id="' + data.id + '"><i class="bi bi-pencil-square"></i></a><%}%><% if (permissions.find(perm=> perm.permission_name === "Post Management" && ( perm.delete == 1))) { %><span class=deleteBtn id="' + data.id + '"><i class="bi bi-trash3-fill"></i></span><%}%></div>';
                  }
                  else{
                    return '';
                  }
                }
              },
          


            ]
          });

        }

    

        $('#post_data').on('click', '.deleteBtn', async function () {
            console.log('delete btn clicked');
            const deleteId = this.id;
         
            Swal.fire({
              // text: "Are you sure to Delete",
              // title: `${deleteCat}`,
              // text: "You won't be able to revert this!",
              icon: "warning",
              html : `<span>Are you sure to Delete Post</span><h4>${deleteId}</h4><span>You won't be able to revert this!</span>`,
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Yes, delete it!"

            }).then(async (result) => {
              if (result.isConfirmed) {
                console.log('confimed');

                try {
                  const response = await fetch(`<%=rootVar%>/api/post/delete_post/${deleteId}`,
                  {
                    method: "DELETE",
                  }).
                    then(response => {
                      if (!response.ok) {
                        throw new error(`Post Data Not received`);
                      }
                      return response.json();
                    }).then(data => {
                      Swal.fire({
                        text: `Post Deleted!`,
                        icon: "success",

                      }).then((result) => {
                        location.reload();
                      })

                    })
                } catch (error) {
                  Swal.fire({
                        text: `Post Delete Error!`,
                        icon: "error",
                  });
                  // console.log(error);
                } 
              } 
            })
          })


          $('#post_data').on('click', '.updateStatusBtn', async function () {
            console.log('post Update btn clicked');
            const updateId = this.id;
            const changeStatus =  $(this).html() == "publish" ? "draft" : "publish";
            console.log(changeStatus);
            // const updatedStatus = updatePostData.post_status == "publish" ? "draft" : "publish";
            Swal.fire({
              // text: "Are you sure to Delete",
              // title: `${deleteCat}`,
              // text: "You won't be able to revert this!",
              icon: "warning",
              html : `<span>Change Post id ${updateId} Status to</span><h4>${changeStatus}</h4>`,
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Yes, Udpate Status!"

            }).then(async (result) => {
              if (result.isConfirmed) {
                console.log('confimed');

                try {
                  const response = await fetch(`<%=rootVar%>/api/post/change_post_status/${updateId}`,
                  {
                    method: "PUT",
                  }).
                    then(response => {
                      if (!response.ok) {
                        throw new error(`Post Data Not received`);
                      }
                      return response.json();
                    }).then(data => {
                      console.log({data});
                      Swal.fire({
                        text: `Post Status changed to ${changeStatus}!`,
                        icon: "success",

                      }).then((result) => {
                        location.reload();
                      })

                    })
                } catch (error) {
                  Swal.fire({
                        text: `Post Status Change Error!`,
                        icon: "error",
                  });
                  // console.log(error);
                } 
              } 
            })
          })



        loadData()

      });
    </script>



  </body>

  </html>