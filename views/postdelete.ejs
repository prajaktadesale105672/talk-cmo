<%- include('head') %>

    </head>

    <body>

        <%- include('appHeader') %>
            <div class="wrapper d-flex align-items-stretch">
                <%- include('sidebar') %>

                    <!-- Page Content  -->
                    <div id="content" class="">
                        <div class="content_wrapper">
                            <% if (typeof postData !== 'undefined' && postData !== null) { %>
                            <form id="deletePost">
                                <div class="container app_container">
                                    <h2 class="mb-4">Delete Post</h2>
                                    <div class="row">
                                        <input type="hidden" id="session_user" name="session_user" value="<%= user.userid %>">
                                        <input type="hidden" id="post_id" name="post_id" value="<%= postData.id %>">
                                        <div class="col-md-8">
                                            <div class="mb-2">
                                                <label for="p_title" class="form-label">Post Title</label>
                                                <input type="text" class="form-control form-control-sm" id="p_title"
                                                    name="fname" required value="<%= postData.post_title %>"
                                                    data-parsley-required-message="Post Title is required" disabled>
                                            </div>
                                            <div class="mb-2">
                                                <label for="p_slug" class="form-label">Post Slug Name</label>
                                                <input type="text" class="form-control form-control-sm" id="p_slug"
                                                    name="p_slug" required value="<%= postData.post_name %>"
                                                    data-parsley-required-message="Post Slug Name is required" disabled>
                                            </div>
                                            <%
                                            const formattedDate = (postData.post_date && postData.post_date !== null && !isNaN(Date.parse(postData.post_date))) ? new Date(postData.post_date).toISOString().slice(0, 16) : "";
                                            %>
                                            <div class="mb-2">
                                                <label for="publish_date" class="form-label">Publish Date</label>
                                                <input class="form-control form-control-sm" id="publish_date"
                                                    type="datetime-local" required value="<%= formattedDate %>"
                                                    data-parsley-required-message="Publish date is required" disabled>
                                                    
                                            </div>

                                            <div class="row mb-2">
                                                <div class="col-md-6 ">
                                                    <label for="category" class="form-label">Category </label>
                                                   <select class="form-select form-select-sm " style="width: 100%"
                                                        id="category" name="category" aria-label="Small select example"
                                                        required data-parsley-required-message="Category is required" disabled>
                                                       
                                                        <% catData.forEach(function(cat){ %>
                                                            <option value="<%= cat.cat_id %>" <%= postData.cat_id == cat.cat_id ? "selected" : "" %> ><%= cat.cat_name %></option>
                                                            <% }) %>
                                                       
                                                    </select>

                                                </div>
                                                <div class="col-md-6 ">
                                                    <label for="subCategory" class="form-label">Sub-Category</label>
                                                    <select class="form-select form-select-sm " id="subCategory"
                                                        name="subCategory" aria-label="Small select example" required
                                                        data-parsley-required-message="Sub Category is required" disabled>
                                                        <% subCatData.forEach(function(subCat){ %>
                                                            <option value="<%= subCat.subcat_id %>" <%= postData.subcat_id == subCat.subcat_id ? "selected" : "" %> ><%= subCat.subcat_name %></option>
                                                            <% }) %>
                                                    </select>
                                                </div>
                                            </div>

                                            <div class="mb-2">
                                                <label for="author" class="form-label">Author</label>
                                                
                                                <select class="form-select form-select-sm " id="author" name="author"
                                                    aria-label="Small select example" required
                                                    data-parsley-required-message="Author is required" disabled>
                                                    <% authorData.forEach(function(author){ %>
                                                        <option value="<%= author.author_id%>"><%= author.author_display_name%></option>
                                                    <%}) %>  
                                                </select>
                                            </div>


                                        </div>
                                       
                                        <div class="col-md-4">
                                            <div class="text-center banner_wrapper mb-2">
                                                <img id="banner_img_preview" class="preview_img"
                                                    src="<%= postData.banner_img ? '/uploads/' + postData.banner_img : '../images/blank-image.svg' %>" alt="Image Preview">
                                            </div>
                                            <div class="mb-2">
                                                <label for="banner_img" class="form-label">Banner Image</label>
                                                <input class="form-control form-control-sm" id="banner_img" type="file" 
                                                value="<%= postData.banner_img %>" disabled>
                                            </div>



                                        </div>

                                        <div class="col-12">
                                            <div class=" mb-2">
                                                <label for="p_desc" class="form-label">Post Description</label>
                                                <textarea id="p_desc" disabled><%= postData.post_content %></textarea>
                                            </div>
                                        </div>


                                        <!-- <p id="login-status"></p> -->

                                    </div>





                                </div>
                                <div class="container app_container mt-3">
                                    <div class="row ">
                                        <h4>SEO</h4>
                                        <div class="col-12 mb-2">
                                            <label for="meta_title" class="form-label">Meta Title</label>
                                            <input type="text" class="form-control form-control-sm" id="meta_title"
                                                name="meta_title" required  value="<%= postData.meta_title %>"
                                                data-parsley-required-message="Meta Title is required" disabled>
                                        </div>
                                        <div class="col-12 mb-2">
                                            <label for="meta_description" class="form-label">Meta
                                                Description</label>
                                            <input type="meta_description" class="form-control form-control-sm"
                                                id="meta_description" name="text" required  value="<%= postData.meta_description %>"
                                                data-parsley-required-message="Meta Description is required" disabled>
                                        </div>
                                        <div class="col-md-8 mb-2">
                                            <label for="meta_keywords" class="form-label">Meta Keywords</label>
                                            <input type="meta_keywords" class="form-control form-control-sm"
                                                id="meta_keywords" name="text" required  value="<%= postData.meta_keywords %>"
                                                data-parsley-required-message="Meta Keywords is required" disabled>
                                        </div>
                                        <div class="col-md-4 mb-2">
                                            <label for="read_time" class="form-label">Reading Time (in Min)</label>
                                            <input type="read_time" class="form-control form-control-sm" id="read_time"
                                                name="text" required  value="<%= postData.reading_time %>"
                                                data-parsley-required-message="Reading Time is required" disabled>
                                        </div>
                                    </div>
                                </div>

                                <div class="container app_container mt-3">
                                    <div class="row ">
                                        <h4>Comment</h4>
                                       <p><%- postData.comments %></p>
                                        <div class="col-md-4 mb-2">
                                            <label for="handover_to" class="form-label">Handover To</label>
                                            <select class="form-select form-select-sm " id="handover_to"
                                                name="handover_to" aria-label="Small select example" disabled >
                                                <option value="" selected>Select User</option>
                                            <% handoverData.forEach(function(handover){ %>
                                                <option value="<%= handover.h_user_id%>"><%= handover.h_user_name%></option>
                                                <% })%>
                                               
                                            </select>
                                        </div>
                                        <div class="col-md-8 mb-3">
                                            <label for="comments" class="form-label">Comment</label>
                                            <input type="comments" class="form-control form-control-sm" id="comments"
                                            name="text" required
                                            data-parsley-required-message="Comment is required" disabled>
                                          </div>

                                        <div class="col-12 mt-3 mb-3 btn_wrapper text-end">
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </div>
                                    </div>
                                </div>
                            </form>
                            <% } else { %>
                                <!-- Variable is not set -->
                                <div class="center_box">
                               <h5 class=" text-danger"><%= error%></h5>
                               <a href="<%=rootVar%>/postall" class="btn btn-sm btn-primary ">View Posts</a>
                                </div>
                              <% } %>
                        </div>
                        <%- include('contentFooter') %>
                    </div>
            </div>


            <footer>
                <!-- Footer content can be added here -->
            </footer>

            <script>
                // tinymce.init({
                //   selector: '#mytextarea'
                // });

                tinymce.init({
                    selector: 'textarea#p_desc',
                    plugins: 'print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
                    imagetools_cors_hosts: ['picsum.photos'],
                    menubar: 'file edit view insert format tools table help',
                    toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
                    toolbar_sticky: false,
                    autosave_ask_before_unload: true,
                    autosave_interval: "30s",
                    autosave_prefix: "{path}{query}-{id}-",
                    autosave_restore_when_empty: false,
                    autosave_retention: "2m",
                    image_advtab: true,
                    setup: function (editor) {
                        // Attach onKeyUp event listener to the editor
                        editor.on('KeyUp', function (event) {
                            var content = editor.getContent();

                            // Check for Chinese characters using a regular expression
                            var regex = /[\u4E00-\u9FFF\u3400-\u4DBF！，。？【】《》：；“”‘’「」『』—–－％＃＠＆＊＋－＝￥｜～｀〈〉〔〕〖〗〘〙〚〛〝〞〟〰〾〿–—‘’‛“”„‟․‧‰‱‼⁇⁈⁉︰﹐﹒﹔﹕﹖﹗﹙﹚﹛﹜﹝﹞﹟﹠﹡﹢﹣﹤﹥﹦﹨﹩﹪﹫ﹰﹱﹲﹴ﹵ﹶﹷﹸﹹﹺﹻﹼﹽﹾﹿ＿－（）]/;
                            if (regex.test(content)) {
                                alert('Editor contains Chinese characters.');
                                // Additional actions when Chinese characters are found
                            } else {
                                console.log('Editor content does not contain Chinese characters.');
                                // Additional actions when no Chinese characters are found
                            }
                        });
                    },
                    /*content_css: '//www.tiny.cloud/css/codepen.min.css',*/
                    link_list: [
                        { title: 'My page 1', value: 'https://www.codexworld.com' },
                        { title: 'My page 2', value: 'https://www.xwebtools.com' }
                    ],
                    image_list: [
                        { title: 'My page 1', value: 'https://www.codexworld.com' },
                        { title: 'My page 2', value: 'https://www.xwebtools.com' }
                    ],
                    image_class_list: [
                        { title: 'None', value: '' },
                        { title: 'Some class', value: 'class-name' }
                    ],
                    importcss_append: true,
                    file_picker_callback: function (callback, value, meta) {
                        /* Provide file and text for the link dialog */
                        if (meta.filetype === 'file') {
                            callback('https://www.google.com/logos/google.jpg', { text: 'My text' });
                        }

                        /* Provide image and alt text for the image dialog */
                        if (meta.filetype === 'image') {
                            callback('https://www.google.com/logos/google.jpg', { alt: 'My alt text' });
                        }

                        /* Provide alternative source and posted for the media dialog */
                        if (meta.filetype === 'media') {
                            callback('movie.mp4', { source2: 'alt.ogg', poster: 'https://www.google.com/logos/google.jpg' });
                        }
                    },
                    image_caption: true,
                    quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
                    noneditable_noneditable_class: "mceNonEditable",
                    toolbar_mode: 'sliding',
                    contextmenu: "link image imagetools table",
                    height: 500,
                    readonly : 1,
                });
            </script>

            <% if (typeof postData !== 'undefined' && postData !== null) { %>
                        <script>
                            $(document).ready(function () {
                               

             



                                $('#deletePost').submit(async function (e) {
                                    e.preventDefault();
                                    
                                    const post_id = $("#post_id").val();
                                    Swal.fire({
                                        title: "Are you sure?",
                                        text: "You won't be able to revert this!",
                                        icon: "warning",
                                        showCancelButton: true,
                                        confirmButtonColor: "#3085d6",
                                        cancelButtonColor: "#d33",
                                        confirmButtonText: "Yes, delete it!"
                                        }).then(async (result) => {
                                        if (result.isConfirmed) {
                                            console.log('delete func '+post_id);
                                            try {
                                                    const response = await fetch("<%=rootVar%>/api/post/delete_post/"+post_id, {
                                                        method: "DELETE",
                                                        
                                                    });

                                                    if (response.ok) {

                                                    Swal.fire({
                                                        text: `Post id ${post_id} deleted!`,
                                                        icon: "success",
                                                        confirmButtonColor: "#3085d6",
                                                        confirmButtonText: "Ok!"
                                                    }).then((result) => {
                                                        if (result.isConfirmed || result.dismiss === Swal.DismissReason.backdrop || result.dismiss === Swal.DismissReason.esc) {
                                                            window.location.replace('<%=rootVar%>/postall');
                                                        }
                                                    });


                                                    console.log(response);
                                                    // Successful login
                                                    const responseData = await response.json();
                                                    document.getElementById("login-status").textContent = "Login successful. Welcome, " + responseData.autToken;
                                                } else {
                                                        Swal.fire({
                                                            text: `Post id ${post_id} delete error!`,
                                                            icon: "error",
                                                        });
                                                    }
                                                } catch (error) {
                                                    console.log(response);
                                                    // Handle network errors
                                                    document.getElementById("login-status").textContent = "Error: " + error.message;
                                                }
                                            }
                                        });
                                            



                                    
                                });
                            })
                        </script>

            <% } %>
    </body>

    </html>